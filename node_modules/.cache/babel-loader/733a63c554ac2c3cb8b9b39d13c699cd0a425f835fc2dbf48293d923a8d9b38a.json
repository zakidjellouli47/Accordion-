{"ast":null,"code":"'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport elementAcceptingRef from '@mui/utils/elementAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FocusTrap from \"../Unstable_TrapFocus/index.js\";\nimport Portal from \"../Portal/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Backdrop from \"../Backdrop/index.js\";\nimport useModal from \"./useModal.js\";\nimport { getModalUtilityClass } from \"./modalClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\nconst ModalRoot = styled('div', {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'fixed',\n  zIndex: (theme.vars || theme).zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0,\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.open && ownerState.exited,\n    style: {\n      visibility: 'hidden'\n    }\n  }]\n})));\nconst ModalBackdrop = styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  const props = useDefaultProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n  const {\n    BackdropComponent = ModalBackdrop,\n    BackdropProps,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    children,\n    container,\n    component,\n    components = {},\n    componentsProps = {},\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    onBackdropClick,\n    onClose,\n    onTransitionEnter,\n    onTransitionExited,\n    open,\n    slotProps = {},\n    slots = {},\n    // eslint-disable-next-line react/prop-types\n    theme,\n    ...other\n  } = props;\n  const propsWithDefaults = {\n    ...props,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  };\n  const {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    portalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  } = useModal({\n    ...propsWithDefaults,\n    rootRef: ref\n  });\n  const ownerState = {\n    ...propsWithDefaults,\n    exited\n  };\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  }\n\n  // It's a Transition like component\n  if (hasTransition) {\n    const {\n      onEnter,\n      onExited\n    } = getTransitionProps();\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n  const externalForwardedProps = {\n    slots: {\n      root: components.Root,\n      backdrop: components.Backdrop,\n      ...slots\n    },\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    ref,\n    elementType: ModalRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other,\n      component\n    },\n    getSlotProps: getRootProps,\n    ownerState,\n    className: clsx(className, classes?.root, !ownerState.open && ownerState.exited && classes?.hidden)\n  });\n  const [BackdropSlot, backdropProps] = useSlot('backdrop', {\n    ref: BackdropProps?.ref,\n    elementType: BackdropComponent,\n    externalForwardedProps,\n    shouldForwardComponentProp: true,\n    additionalProps: BackdropProps,\n    getSlotProps: otherHandlers => {\n      return getBackdropProps({\n        ...otherHandlers,\n        onClick: event => {\n          if (onBackdropClick) {\n            onBackdropClick(event);\n          }\n          if (otherHandlers?.onClick) {\n            otherHandlers.onClick(event);\n          }\n        }\n      });\n    },\n    className: clsx(BackdropProps?.className, classes?.backdrop),\n    ownerState\n  });\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(RootSlot, {\n      ...rootProps,\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropSlot, {\n        ...backdropProps\n      }) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.\n   * @deprecated Use `slotProps.backdrop` instead.\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * You can also provide a callback, which is called in a React layout effect.\n   * This lets you set the container from a ref, and also makes server-side rendering possible.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Modal;","map":{"version":3,"names":["React","PropTypes","clsx","HTMLElementType","elementAcceptingRef","composeClasses","FocusTrap","Portal","styled","memoTheme","useDefaultProps","Backdrop","useModal","getModalUtilityClass","useSlot","jsx","_jsx","jsxs","_jsxs","useUtilityClasses","ownerState","open","exited","classes","slots","root","backdrop","ModalRoot","name","slot","overridesResolver","props","styles","hidden","theme","position","zIndex","vars","modal","right","bottom","top","left","variants","style","visibility","ModalBackdrop","Modal","forwardRef","inProps","ref","BackdropComponent","BackdropProps","classesProp","className","closeAfterTransition","children","container","component","components","componentsProps","disableAutoFocus","disableEnforceFocus","disableEscapeKeyDown","disablePortal","disableRestoreFocus","disableScrollLock","hideBackdrop","keepMounted","onBackdropClick","onClose","onTransitionEnter","onTransitionExited","slotProps","other","propsWithDefaults","getRootProps","getBackdropProps","getTransitionProps","portalRef","isTopModal","hasTransition","rootRef","childProps","tabIndex","undefined","onEnter","onExited","externalForwardedProps","Root","RootSlot","rootProps","elementType","getSlotProps","BackdropSlot","backdropProps","shouldForwardComponentProp","additionalProps","otherHandlers","onClick","event","isEnabled","cloneElement","process","env","NODE_ENV","propTypes","object","isRequired","string","bool","shape","oneOfType","func","sx","arrayOf"],"sources":["C:/Users/Elmendassi/Desktop/accordiane/test/node_modules/.pnpm/@mui+material@6.4.6_@emotio_136ab401d202919bd655185ec974b9a4/node_modules/@mui/material/Modal/Modal.js"],"sourcesContent":["'use client';\n\nimport * as React from 'react';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport HTMLElementType from '@mui/utils/HTMLElementType';\nimport elementAcceptingRef from '@mui/utils/elementAcceptingRef';\nimport composeClasses from '@mui/utils/composeClasses';\nimport FocusTrap from \"../Unstable_TrapFocus/index.js\";\nimport Portal from \"../Portal/index.js\";\nimport { styled } from \"../zero-styled/index.js\";\nimport memoTheme from \"../utils/memoTheme.js\";\nimport { useDefaultProps } from \"../DefaultPropsProvider/index.js\";\nimport Backdrop from \"../Backdrop/index.js\";\nimport useModal from \"./useModal.js\";\nimport { getModalUtilityClass } from \"./modalClasses.js\";\nimport useSlot from \"../utils/useSlot.js\";\nimport { jsx as _jsx, jsxs as _jsxs } from \"react/jsx-runtime\";\nconst useUtilityClasses = ownerState => {\n  const {\n    open,\n    exited,\n    classes\n  } = ownerState;\n  const slots = {\n    root: ['root', !open && exited && 'hidden'],\n    backdrop: ['backdrop']\n  };\n  return composeClasses(slots, getModalUtilityClass, classes);\n};\nconst ModalRoot = styled('div', {\n  name: 'MuiModal',\n  slot: 'Root',\n  overridesResolver: (props, styles) => {\n    const {\n      ownerState\n    } = props;\n    return [styles.root, !ownerState.open && ownerState.exited && styles.hidden];\n  }\n})(memoTheme(({\n  theme\n}) => ({\n  position: 'fixed',\n  zIndex: (theme.vars || theme).zIndex.modal,\n  right: 0,\n  bottom: 0,\n  top: 0,\n  left: 0,\n  variants: [{\n    props: ({\n      ownerState\n    }) => !ownerState.open && ownerState.exited,\n    style: {\n      visibility: 'hidden'\n    }\n  }]\n})));\nconst ModalBackdrop = styled(Backdrop, {\n  name: 'MuiModal',\n  slot: 'Backdrop',\n  overridesResolver: (props, styles) => {\n    return styles.backdrop;\n  }\n})({\n  zIndex: -1\n});\n\n/**\n * Modal is a lower-level construct that is leveraged by the following components:\n *\n * - [Dialog](/material-ui/api/dialog/)\n * - [Drawer](/material-ui/api/drawer/)\n * - [Menu](/material-ui/api/menu/)\n * - [Popover](/material-ui/api/popover/)\n *\n * If you are creating a modal dialog, you probably want to use the [Dialog](/material-ui/api/dialog/) component\n * rather than directly using Modal.\n *\n * This component shares many concepts with [react-overlays](https://react-bootstrap.github.io/react-overlays/#modals).\n */\nconst Modal = /*#__PURE__*/React.forwardRef(function Modal(inProps, ref) {\n  const props = useDefaultProps({\n    name: 'MuiModal',\n    props: inProps\n  });\n  const {\n    BackdropComponent = ModalBackdrop,\n    BackdropProps,\n    classes: classesProp,\n    className,\n    closeAfterTransition = false,\n    children,\n    container,\n    component,\n    components = {},\n    componentsProps = {},\n    disableAutoFocus = false,\n    disableEnforceFocus = false,\n    disableEscapeKeyDown = false,\n    disablePortal = false,\n    disableRestoreFocus = false,\n    disableScrollLock = false,\n    hideBackdrop = false,\n    keepMounted = false,\n    onBackdropClick,\n    onClose,\n    onTransitionEnter,\n    onTransitionExited,\n    open,\n    slotProps = {},\n    slots = {},\n    // eslint-disable-next-line react/prop-types\n    theme,\n    ...other\n  } = props;\n  const propsWithDefaults = {\n    ...props,\n    closeAfterTransition,\n    disableAutoFocus,\n    disableEnforceFocus,\n    disableEscapeKeyDown,\n    disablePortal,\n    disableRestoreFocus,\n    disableScrollLock,\n    hideBackdrop,\n    keepMounted\n  };\n  const {\n    getRootProps,\n    getBackdropProps,\n    getTransitionProps,\n    portalRef,\n    isTopModal,\n    exited,\n    hasTransition\n  } = useModal({\n    ...propsWithDefaults,\n    rootRef: ref\n  });\n  const ownerState = {\n    ...propsWithDefaults,\n    exited\n  };\n  const classes = useUtilityClasses(ownerState);\n  const childProps = {};\n  if (children.props.tabIndex === undefined) {\n    childProps.tabIndex = '-1';\n  }\n\n  // It's a Transition like component\n  if (hasTransition) {\n    const {\n      onEnter,\n      onExited\n    } = getTransitionProps();\n    childProps.onEnter = onEnter;\n    childProps.onExited = onExited;\n  }\n  const externalForwardedProps = {\n    slots: {\n      root: components.Root,\n      backdrop: components.Backdrop,\n      ...slots\n    },\n    slotProps: {\n      ...componentsProps,\n      ...slotProps\n    }\n  };\n  const [RootSlot, rootProps] = useSlot('root', {\n    ref,\n    elementType: ModalRoot,\n    externalForwardedProps: {\n      ...externalForwardedProps,\n      ...other,\n      component\n    },\n    getSlotProps: getRootProps,\n    ownerState,\n    className: clsx(className, classes?.root, !ownerState.open && ownerState.exited && classes?.hidden)\n  });\n  const [BackdropSlot, backdropProps] = useSlot('backdrop', {\n    ref: BackdropProps?.ref,\n    elementType: BackdropComponent,\n    externalForwardedProps,\n    shouldForwardComponentProp: true,\n    additionalProps: BackdropProps,\n    getSlotProps: otherHandlers => {\n      return getBackdropProps({\n        ...otherHandlers,\n        onClick: event => {\n          if (onBackdropClick) {\n            onBackdropClick(event);\n          }\n          if (otherHandlers?.onClick) {\n            otherHandlers.onClick(event);\n          }\n        }\n      });\n    },\n    className: clsx(BackdropProps?.className, classes?.backdrop),\n    ownerState\n  });\n  if (!keepMounted && !open && (!hasTransition || exited)) {\n    return null;\n  }\n  return /*#__PURE__*/_jsx(Portal, {\n    ref: portalRef,\n    container: container,\n    disablePortal: disablePortal,\n    children: /*#__PURE__*/_jsxs(RootSlot, {\n      ...rootProps,\n      children: [!hideBackdrop && BackdropComponent ? /*#__PURE__*/_jsx(BackdropSlot, {\n        ...backdropProps\n      }) : null, /*#__PURE__*/_jsx(FocusTrap, {\n        disableEnforceFocus: disableEnforceFocus,\n        disableAutoFocus: disableAutoFocus,\n        disableRestoreFocus: disableRestoreFocus,\n        isEnabled: isTopModal,\n        open: open,\n        children: /*#__PURE__*/React.cloneElement(children, childProps)\n      })]\n    })\n  });\n});\nprocess.env.NODE_ENV !== \"production\" ? Modal.propTypes /* remove-proptypes */ = {\n  // ┌────────────────────────────── Warning ──────────────────────────────┐\n  // │ These PropTypes are generated from the TypeScript type definitions. │\n  // │    To update them, edit the d.ts file and run `pnpm proptypes`.     │\n  // └─────────────────────────────────────────────────────────────────────┘\n  /**\n   * A backdrop component. This prop enables custom backdrop rendering.\n   * @deprecated Use `slots.backdrop` instead. While this prop currently works, it will be removed in the next major version.\n   * Use the `slots.backdrop` prop to make your application ready for the next version of Material UI.\n   * @default styled(Backdrop, {\n   *   name: 'MuiModal',\n   *   slot: 'Backdrop',\n   *   overridesResolver: (props, styles) => {\n   *     return styles.backdrop;\n   *   },\n   * })({\n   *   zIndex: -1,\n   * })\n   */\n  BackdropComponent: PropTypes.elementType,\n  /**\n   * Props applied to the [`Backdrop`](https://mui.com/material-ui/api/backdrop/) element.\n   * @deprecated Use `slotProps.backdrop` instead.\n   */\n  BackdropProps: PropTypes.object,\n  /**\n   * A single child content element.\n   */\n  children: elementAcceptingRef.isRequired,\n  /**\n   * Override or extend the styles applied to the component.\n   */\n  classes: PropTypes.object,\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n  /**\n   * When set to true the Modal waits until a nested Transition is completed before closing.\n   * @default false\n   */\n  closeAfterTransition: PropTypes.bool,\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes.elementType,\n  /**\n   * The components used for each slot inside.\n   *\n   * @deprecated Use the `slots` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  components: PropTypes.shape({\n    Backdrop: PropTypes.elementType,\n    Root: PropTypes.elementType\n  }),\n  /**\n   * The extra props for the slot components.\n   * You can override the existing props or add new ones.\n   *\n   * @deprecated Use the `slotProps` prop instead. This prop will be removed in v7. See [Migrating from deprecated APIs](https://mui.com/material-ui/migration/migrating-from-deprecated-apis/) for more details.\n   *\n   * @default {}\n   */\n  componentsProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * An HTML element or function that returns one.\n   * The `container` will have the portal children appended to it.\n   *\n   * You can also provide a callback, which is called in a React layout effect.\n   * This lets you set the container from a ref, and also makes server-side rendering possible.\n   *\n   * By default, it uses the body of the top-level document object,\n   * so it's simply `document.body` most of the time.\n   */\n  container: PropTypes /* @typescript-to-proptypes-ignore */.oneOfType([HTMLElementType, PropTypes.func]),\n  /**\n   * If `true`, the modal will not automatically shift focus to itself when it opens, and\n   * replace it to the last focused element when it closes.\n   * This also works correctly with any modal children that have the `disableAutoFocus` prop.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableAutoFocus: PropTypes.bool,\n  /**\n   * If `true`, the modal will not prevent focus from leaving the modal while open.\n   *\n   * Generally this should never be set to `true` as it makes the modal less\n   * accessible to assistive technologies, like screen readers.\n   * @default false\n   */\n  disableEnforceFocus: PropTypes.bool,\n  /**\n   * If `true`, hitting escape will not fire the `onClose` callback.\n   * @default false\n   */\n  disableEscapeKeyDown: PropTypes.bool,\n  /**\n   * The `children` will be under the DOM hierarchy of the parent component.\n   * @default false\n   */\n  disablePortal: PropTypes.bool,\n  /**\n   * If `true`, the modal will not restore focus to previously focused element once\n   * modal is hidden or unmounted.\n   * @default false\n   */\n  disableRestoreFocus: PropTypes.bool,\n  /**\n   * Disable the scroll lock behavior.\n   * @default false\n   */\n  disableScrollLock: PropTypes.bool,\n  /**\n   * If `true`, the backdrop is not rendered.\n   * @default false\n   */\n  hideBackdrop: PropTypes.bool,\n  /**\n   * Always keep the children in the DOM.\n   * This prop can be useful in SEO situation or\n   * when you want to maximize the responsiveness of the Modal.\n   * @default false\n   */\n  keepMounted: PropTypes.bool,\n  /**\n   * Callback fired when the backdrop is clicked.\n   * @deprecated Use the `onClose` prop with the `reason` argument to handle the `backdropClick` events.\n   */\n  onBackdropClick: PropTypes.func,\n  /**\n   * Callback fired when the component requests to be closed.\n   * The `reason` parameter can optionally be used to control the response to `onClose`.\n   *\n   * @param {object} event The event source of the callback.\n   * @param {string} reason Can be: `\"escapeKeyDown\"`, `\"backdropClick\"`.\n   */\n  onClose: PropTypes.func,\n  /**\n   * A function called when a transition enters.\n   */\n  onTransitionEnter: PropTypes.func,\n  /**\n   * A function called when a transition has exited.\n   */\n  onTransitionExited: PropTypes.func,\n  /**\n   * If `true`, the component is shown.\n   */\n  open: PropTypes.bool.isRequired,\n  /**\n   * The props used for each slot inside the Modal.\n   * @default {}\n   */\n  slotProps: PropTypes.shape({\n    backdrop: PropTypes.oneOfType([PropTypes.func, PropTypes.object]),\n    root: PropTypes.oneOfType([PropTypes.func, PropTypes.object])\n  }),\n  /**\n   * The components used for each slot inside the Modal.\n   * Either a string to use a HTML element or a component.\n   * @default {}\n   */\n  slots: PropTypes.shape({\n    backdrop: PropTypes.elementType,\n    root: PropTypes.elementType\n  }),\n  /**\n   * The system prop that allows defining system overrides as well as additional CSS styles.\n   */\n  sx: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOfType([PropTypes.func, PropTypes.object, PropTypes.bool])), PropTypes.func, PropTypes.object])\n} : void 0;\nexport default Modal;"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}